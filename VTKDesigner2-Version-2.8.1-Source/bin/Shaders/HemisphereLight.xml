<?xml version="1.0" encoding="UTF-8"?>
<Material name="HemisphereLighting" number_of_properties="0" number_of_vertex_shaders="1" number_of_fragment_shaders="1">

<Shader scope="Vertex" name="HemisphereLightVert" location="Inline" language="GLSL" entry="main">
<ApplicationUniform type="float" name = "LightPosition" value ="LightPosition" number_of_elements="3" defaultValue ="1.0,1.0,1.0"/>
<ApplicationUniform type="float" name = "SkyColor" value ="SkyColor" number_of_elements="3" defaultValue ="1.0,0.0,0.0"/>
<ApplicationUniform type="float" name = "GroundColor" value ="GroundColor" number_of_elements="3" defaultValue ="0.0,0.0,1.0"/>

uniform vec3 LightPosition;
uniform vec3 SkyColor;
uniform vec3 GroundColor;

attribute float Accessibility;
varying vec3 DiffuseColor;

void main()
{
    vec3 ecPosition = vec3(gl_ModelViewMatrix * gl_Vertex);
    vec3 tnorm = normalize(gl_NormalMatrix * gl_Normal);
    vec3 lightVec = normalize(LightPosition - ecPosition);
    float costheta = dot(tnorm, lightVec);
    float a = 0.5 + 0.5 * costheta;
    DiffuseColor = mix(GroundColor, SkyColor, a) - .35 ; 
    gl_Position = ftransform();
}
</Shader>

<Shader scope="Fragment" name="HemisphereLightFrag" location="Inline" language="GLSL" entry="main">
varying vec3  DiffuseColor;
void main(void)
{
    gl_FragColor = vec4(DiffuseColor, 1.0);
}
</Shader>
</Material>

 