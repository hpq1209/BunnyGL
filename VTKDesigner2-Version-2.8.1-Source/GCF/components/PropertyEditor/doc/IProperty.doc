/**
\ingroup propertyeditorcomp
\interface IProperty IProperty
\brief Access information about a single property in an object

Instances of this interface are accessed only through IPropertyEditor interface. Example

\code
IPropertyEditor* propEditor = GCF::findObject<IPropertyEditor*>();
if(propEditor)
{
    for(int i=0; i<propEditor->propertyCount(); i++)
    {
        IProperty* prop = propEditor->property(i);
        if(prop)
            // use the property interface here.
    }
}
\endcode
*/

/**
\fn virtual QObject* IProperty::propertyObject() = 0

Returns the object whose property is described by this interface
*/

/**
\fn virtual const char* IProperty::propertyName() = 0

Returns the name of the property in \c propertyObject() that is described by this interface
*/

/**
\fn virtual QVariant IProperty::propertyValue() = 0

Returns the property value
*/

/**
\fn virtual bool IProperty::setPropertyValue(QVariant value) = 0

Sets the property value. Note: This function actually modifies the property value of
\c propertyObject()
*/

/**
\internal
\fn virtual IEditableProperties* IProperty::editableProperties() = 0
*/

/**
\internal
\fn virtual int IProperty::editablePropertyIndex() = 0
*/

